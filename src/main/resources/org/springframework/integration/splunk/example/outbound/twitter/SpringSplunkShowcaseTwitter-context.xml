<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-splunk="http://www.springframework.org/schema/integration/splunk"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
	xmlns:int-twitter="http://www.springframework.org/schema/integration/twitter"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/integration/splunk http://www.springframework.org/schema/integration/splunk/spring-integration-splunk.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration/twitter http://www.springframework.org/schema/integration/twitter/spring-integration-twitter-2.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<context:property-placeholder location="classpath:twitter.properties" />

	<import resource="../../SplunkCommon-context.xml" />

	<jdbc:embedded-database id="dataSource" type="DERBY" />

	<jdbc:initialize-database data-source="dataSource"
		ignore-failures="DROPS">
		<jdbc:script
			location="classpath:org/springframework/integration/jdbc/schema-drop-derby.sql" />
		<jdbc:script
			location="classpath:org/springframework/integration/jdbc/schema-derby.sql" />
		<jdbc:script location="classpath:data.sql" />
	</jdbc:initialize-database>

	<bean id="personDAO"
		class="org.springframework.integration.splunk.example.dao.PersonDAO">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<int-jdbc:message-store id="messageStore"
		data-source="dataSource" table-prefix="INT_" />


	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="twitterTemplate"
		class="org.springframework.social.twitter.api.impl.TwitterTemplate">
		<constructor-arg value="${twitter.oauth.consumerKey}" />
		<constructor-arg value="${twitter.oauth.consumerSecret}" />
		<constructor-arg value="${twitter.oauth.accessToken}" />
		<constructor-arg value="${twitter.oauth.accessTokenSecret}" />
	</bean>


	<int:publish-subscribe-channel id="input">
	</int:publish-subscribe-channel>

	<int:channel id="filterChannel">
	</int:channel>

	<int:channel id="outputToSplunkWithMessageStore">
		<int:queue message-store="messageStore" capacity="1000" />
	</int:channel>

	<int-twitter:inbound-channel-adapter
		twitter-template="twitterTemplate" channel="input">
		<int:poller fixed-rate="5000" max-messages-per-poll="3" />
	</int-twitter:inbound-channel-adapter>


	<int:service-activator input-channel="input"
		ref="twitterDataHandler"></int:service-activator>

	<int:filter input-channel="input" output-channel="filterChannel"
		ref="fromUserSelector"></int:filter>

	<bean id="fromUserSelector"
		class="org.springframework.integration.splunk.example.outbound.twitter.FromUserSelector">
		<property name="fromUsers">
			<list>
				<value>AP</value>
				<value>nytimes</value>
			</list>
		</property>
	</bean>

	<int:transformer input-channel="filterChannel"
		output-channel="outputToSplunkWithMessageStore" ref="splunkTransformer"></int:transformer>

	<bean id="splunkTransformer"
		class="org.springframework.integration.splunk.example.outbound.twitter.TwitterToSplunkTransformer" />

	<int-splunk:outbound-channel-adapter
		id="splunkOutboundChannelAdapter" auto-startup="true" order="1"
		channel="outputToSplunkWithMessageStore" splunk-server-ref="splunkServer"
		pool-server-connection="true" sourceType="twitter-integration" source="twitter"
		ingest="SUBMIT">
		<int:poller fixed-rate="5" time-unit="SECONDS">
			<int:transactional transaction-manager="transactionManager"
				isolation="DEFAULT" propagation="REQUIRED" />
		</int:poller>
	</int-splunk:outbound-channel-adapter>

</beans>

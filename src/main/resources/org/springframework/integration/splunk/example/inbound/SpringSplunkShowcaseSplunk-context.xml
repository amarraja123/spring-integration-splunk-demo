<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-splunk="http://www.springframework.org/schema/integration/splunk"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
	xmlns:int-twitter="http://www.springframework.org/schema/integration/twitter"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/integration/splunk http://www.springframework.org/schema/integration/splunk/spring-integration-splunk.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration/twitter http://www.springframework.org/schema/integration/twitter/spring-integration-twitter-2.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<import resource="../SplunkCommon-context.xml" />

	<jdbc:embedded-database id="dataSource" type="HSQL" />

	<jdbc:initialize-database data-source="dataSource"
		ignore-failures="DROPS">
		<jdbc:script
			location="classpath:org/springframework/integration/jdbc/schema-drop-hsqldb.sql" />
		<jdbc:script
			location="classpath:org/springframework/integration/jdbc/schema-hsqldb.sql" />
		<jdbc:script location="classpath:data.sql" />
	</jdbc:initialize-database>
	
	<int:publish-subscribe-channel id="inputFromSplunk">
	</int:publish-subscribe-channel>

	<int:channel id="splitterChannel">
	</int:channel>

	<int-splunk:inbound-channel-adapter id="splunkInboundChannelAdapter"
		auto-startup="true" search="search event_id=person-table" 
		splunk-server-ref="splunkServer"
		channel="inputFromSplunk" mode="BLOCKING" initEarliestTime="-1d">
		<int:poller fixed-rate="5" time-unit="SECONDS"/>
	</int-splunk:inbound-channel-adapter>
	
	<int:splitter input-channel="inputFromSplunk" output-channel="splitterChannel" ref="splunkSplitter" method="splitMessage"></int:splitter>
	<bean id="splunkSplitter" class="org.springframework.integration.splunk.example.inbound.SplunkToPersonSplitter"></bean>
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="personDAO"
		class="org.springframework.integration.splunk.example.dao.PersonDAO">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<int-jdbc:outbound-channel-adapter
		query="insert into data (id, name, status) values (:payload[personId], :payload[personName], 0)" channel="splitterChannel"
		data-source="dataSource">
	</int-jdbc:outbound-channel-adapter>

</beans>
